<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgs.dubbo.dao.CategoryDao">

    <resultMap id="CategoryResultMap" type="Category">
        <!--        把查询的ID映射为type指定的类的属性-->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="parent_id" property="parentId"/>
<!--        &lt;!&ndash;        一对一关联查询&ndash;&gt;-->
<!--                <association column="id" property="children"-->
<!--                             select="com.situ.sb04.dao.ClassDao.findById"/>-->
    </resultMap>

    <select id="findAll" resultType="Category">
        select id,
               name,
               description,
               parent_id
        from t_category
    </select>
    <select id="selectNames" resultType="Category">
        SELECT id, name FROM t_category
    </select>
    <select id="findById" resultType="Category">
        select id,
               name,
               description,
               parent_id
        from t_category
        where id = #{id}
    </select>
<!--    会将自动生成的id赋值给传过来的Category对象 后期可能会用到-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="Category">
        insert into t_category(name, description, parent_id)
        values (#{name}, #{description}, #{parentId})
    </insert>
    <update id="update" parameterType="Category">
        update t_category
        set name = #{name},
            description = #{description},
            parent_id = #{parentId}
        where id = #{id}
    </update>
    <delete id="delete" parameterType="int">
        delete from t_category
        where id = #{id}
    </delete>
</mapper>